{"paragraphs":[{"text":"%spark\n\nimport collection.JavaConverters._","user":"anonymous","dateUpdated":"2017-05-10T22:12:39+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217118_-1924837733","id":"20170510-195936_662415991","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:39+0000","dateFinished":"2017-05-10T22:12:56+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3435"},{"text":"%pyspark\n\nimport numpy as np","user":"anonymous","dateUpdated":"2017-05-10T22:12:39+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217130_-1941766685","id":"20170510-203853_921045072","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:41+0000","dateFinished":"2017-05-10T22:12:57+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3436"},{"text":"%spark\n\n// Pull in the data from a file.\nval full_data_frame = sqlc.read.format(\"csv\").option(\"header\", true).load(\"/data-sets/transactions_mid.csv\")\nval proper_data_frame = full_data_frame.selectExpr(\"CAST(id AS LONG) id\", \"CAST(category AS LONG) category\", \"CAST(date AS DATE) date\")","user":"anonymous","dateUpdated":"2017-05-10T22:13:17+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217130_-1941766685","id":"20170510-171530_1117999144","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:13:17+0000","dateFinished":"2017-05-10T22:13:17+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3437"},{"text":"%spark\n\n// Get an RDD with each column cast as the required data type (Long, Long, Long).\nval raw_rdd = proper_data_frame.rdd.map { row =>\n    (row.getLong(0).asInstanceOf[java.lang.Long], row.getDate(2).getTime.asInstanceOf[java.lang.Long], row.getLong(1).asInstanceOf[java.lang.Long])\n} ","user":"anonymous","dateUpdated":"2017-05-10T22:12:41+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217131_-1942151434","id":"20170510-172715_1461894513","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:56+0000","dateFinished":"2017-05-10T22:12:57+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3438"},{"text":"%spark\n\n// Find which items show up infrequently (less than 10 times).\nval infrequent_items = raw_rdd.map { case (id, date, item) =>\n    (item, 1)\n}.reduceByKey(_+_).filter { case (item, instances) => \n    instances < 10 \n}.keys.collect()","user":"anonymous","dateUpdated":"2017-05-10T22:12:41+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217131_-1942151434","id":"20170510-174011_1072726001","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:57+0000","dateFinished":"2017-05-10T22:12:57+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3439"},{"text":"%spark\n\n// Filter out infrequent items.\nval filtered_rdd = raw_rdd.filter { case (id, date, item) =>\n    !infrequent_items.contains(item)\n}","user":"anonymous","dateUpdated":"2017-05-10T22:12:41+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217132_-1944075178","id":"20170510-181909_152380770","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:57+0000","dateFinished":"2017-05-10T22:12:57+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3440"},{"text":"%spark\n\n// Create a new index for each item.\nval new_indexed_item_rdd = filtered_rdd.map { case(id, date, item) =>\n    item\n}.distinct.map((1,_)).groupByKey.values.flatMap { items =>\n    items.zipWithIndex\n}","user":"anonymous","dateUpdated":"2017-05-10T22:12:41+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217132_-1944075178","id":"20170510-184022_1808649945","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:58+0000","dateFinished":"2017-05-10T22:12:58+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3441"},{"text":"%spark\n\n// Key RDD by the item.\nval left_rdd = filtered_rdd.map { case (id, date, item) =>\n    (item, (id, date))\n}","user":"anonymous","dateUpdated":"2017-05-10T22:12:41+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217133_-1944459927","id":"20170510-195630_931160979","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:58+0000","dateFinished":"2017-05-10T22:12:58+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3442"},{"text":"%spark\n\n// Left outer join the new indexed items with the filtered items.\nval joined_rdd = left_rdd.leftOuterJoin(new_indexed_item_rdd).map { case (old_item_id, ((id, date), new_item_id_option)) =>\n    (id, date, new_item_id_option.get)\n}","user":"anonymous","dateUpdated":"2017-05-10T22:12:41+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217133_-1944459927","id":"20170510-200507_876524725","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:58+0000","dateFinished":"2017-05-10T22:12:58+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3443"},{"text":"%spark\n\n// Formate RDD to ((id, data), item).\nval id_date_keyed_rdd = joined_rdd.map { case (id, date, item) =>\n    ((id, date), item)\n}","user":"anonymous","dateUpdated":"2017-05-10T22:12:41+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217134_-1943305680","id":"20170510-174650_1059407894","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:58+0000","dateFinished":"2017-05-10T22:12:58+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3444"},{"text":"%spark\n\n// Group and filter the RDD.\nval rdd = id_date_keyed_rdd.groupByKey.map { case ((id, date), items) =>\n    (id, (date, items))\n}.groupByKey.filter(_._2.size >= 4).mapValues(_.toSeq.sortWith(_._1 < _._1))","user":"anonymous","dateUpdated":"2017-05-10T22:12:41+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217134_-1943305680","id":"20170510-182431_1330877901","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:58+0000","dateFinished":"2017-05-10T22:12:58+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3445"},{"text":"%spark\n\n// Convert to a Java RDD.\nval java_typed_rdd = rdd.map { case (id, baskets) =>\n    val java_baskets = baskets.map { case (date, items) =>\n        val java_items = items.asJava\n        Seq(date, java_items).asJava\n    }.asJava\n    Seq(id, java_baskets).asJava\n}","user":"anonymous","dateUpdated":"2017-05-10T22:12:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217135_-1943690429","id":"20170510-195243_736799608","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:58+0000","dateFinished":"2017-05-10T22:12:58+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3446"},{"text":"%spark\n\n// Pickle the data and prepare it for Python.\nval serialized_rdd = java_typed_rdd.mapPartitions { partition =>\n    val pickler_klass = Class.forName(\"org.apache.spark.api.python.SerDeUtil$AutoBatchedPickler\")\n    val constructor = pickler_klass.getConstructor(classOf[Iterator[Any]])\n    constructor.newInstance(partition).asInstanceOf[Iterator[Byte]]\n}.toJavaRDD","user":"anonymous","dateUpdated":"2017-05-10T22:12:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217135_-1943690429","id":"20170510-202911_2121681603","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:58+0000","dateFinished":"2017-05-10T22:12:59+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3447"},{"text":"%spark\n\n// This is how Zeppelin allows us to transfere things between languages. \"z\" is the \"Zeppelin context\".\nfor(i <- 1 to 5) {\n    z.put(\"java_rdd\", serialized_rdd)\n}","user":"anonymous","dateUpdated":"2017-05-10T22:12:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217135_-1943690429","id":"20170510-203010_478860460","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:59+0000","dateFinished":"2017-05-10T22:12:59+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3448"},{"text":"%pyspark\n\n# NOTE: Take notice that we are now in Python Land!\n\n# We must get the RDD from the Zeppelin context.\njrdd = z.get(\"java_rdd\")","user":"anonymous","dateUpdated":"2017-05-10T22:12:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217136_-1933302209","id":"20170510-203147_2051050555","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:59+0000","dateFinished":"2017-05-10T22:12:59+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3449"},{"text":"%pyspark\n\n# Convert to a Python RDD.\nrdd = RDD(jrdd, sc)","user":"anonymous","dateUpdated":"2017-05-10T22:12:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217136_-1933302209","id":"20170510-203241_233675025","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:59+0000","dateFinished":"2017-05-10T22:12:59+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3450"},{"text":"%pyspark\n\n# Helper function to create baskets of items. \ndef make_numpy_basket(items):\n    truncated = map(lambda x: x+1, items[:50])\n    length = len(truncated)\n    if length < 50:\n        zeros = [0] * (50 - length)\n    else:\n        zeros = []\n    return [length] + truncated + zeros","user":"anonymous","dateUpdated":"2017-05-10T22:12:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217137_-1933686958","id":"20170510-203711_1687977858","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:59+0000","dateFinished":"2017-05-10T22:12:59+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3451"},{"text":"%pyspark\n\n# Helper function to format the date.\ndef make_numpy_date(date):\n    baskets = make_numpy_basket(date[1])\n    return [date[0]] + baskets","user":"anonymous","dateUpdated":"2017-05-10T22:12:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217137_-1933686958","id":"20170510-204211_832117308","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:59+0000","dateFinished":"2017-05-10T22:12:59+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3452"},{"text":"%pyspark\n\n# Hellper function to format the rows properly.\ndef make_numpy_row(row):\n    return map(lambda date:np.array([row[0]] + make_numpy_date(date)), row[1])","user":"anonymous","dateUpdated":"2017-05-10T22:19:45+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217138_-1932532711","id":"20170510-204319_159630643","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:59+0000","dateFinished":"2017-05-10T22:12:59+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3453"},{"text":"%pyspark\n\n# Turn the RDD into a Numpy formatted array.\nnp_rdd = rdd.flatMap(make_numpy_row)","user":"anonymous","dateUpdated":"2017-05-10T22:12:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217138_-1932532711","id":"20170510-204540_1521042492","dateCreated":"2017-05-10T22:10:17+0000","dateStarted":"2017-05-10T22:12:59+0000","dateFinished":"2017-05-10T22:12:59+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3454"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2017-05-10T22:12:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494454217139_-1932917460","id":"20170510-205127_858158093","dateCreated":"2017-05-10T22:10:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3456"}],"name":"Session 4: Data Preperation","id":"2CHSF9TBH","angularObjects":{"2CF5TWB17:shared_process":[],"2CFXF5HM8:shared_process":[],"2CHAU4NEC:shared_process":[],"2CF7PJD9N:shared_process":[],"2CJFMG4KD:shared_process":[],"2CHRHK4MK:shared_process":[],"2CGY8RSQ1:shared_process":[],"2CH4KHBVF:shared_process":[],"2CJNEZXJX:shared_process":[],"2CEVK558U:shared_process":[],"2CG8DH38U:shared_process":[],"2CF7D4BXP:shared_process":[],"2CHXG4HDQ:shared_process":[],"2CJSKJNRF:shared_process":[],"2CHH4VU1J:shared_process":[],"2CG2MNY49:shared_process":[],"2CHH5NJJY:shared_process":[],"2CFBWEPA4:shared_process":[],"2CFEPKHXX:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}